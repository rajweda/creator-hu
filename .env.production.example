# Creator Hub - Production Environment Configuration Template
# Copy this file to .env and update the values for your production deployment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
# Example: postgresql://postgres:mypassword@localhost:5432/creator_hub
DATABASE_URL=postgresql://username:password@host:port/database

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Node.js environment (should be 'production' for production deployments)
NODE_ENV=production

# Port for the backend server (most cloud providers use PORT env var)
PORT=5000

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Secret Key (MUST be at least 32 characters long)
# Generate a secure secret: openssl rand -base64 32
# IMPORTANT: Change this in production!
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters-long

# JWT Token Expiration (default: 7 days)
JWT_EXPIRES_IN=7d

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Frontend URL for CORS (comma-separated for multiple origins)
# Example: https://myapp.vercel.app,https://myapp.com
CORS_ORIGIN=https://your-frontend-domain.com

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Path for file uploads (use absolute path in production)
UPLOAD_PATH=/app/uploads

# Maximum file size for uploads (in bytes)
# 50MB = 52428800 bytes
MAX_FILE_SIZE=52428800

# Allowed file types for video uploads
ALLOWED_VIDEO_TYPES=mp4,avi,mov,wmv,flv,webm

# Allowed file types for image uploads
ALLOWED_IMAGE_TYPES=jpg,jpeg,png,gif,webp

# =============================================================================
# REDIS CONFIGURATION (Optional - for caching)
# =============================================================================

# Redis connection URL (if using Redis for caching)
# Format: redis://username:password@host:port
# Example: redis://localhost:6379
# REDIS_URL=redis://localhost:6379

# Redis session store (if using Redis for sessions)
# REDIS_SESSION_SECRET=your-redis-session-secret

# =============================================================================
# EMAIL CONFIGURATION (Optional - for notifications)
# =============================================================================

# SMTP configuration for sending emails
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# Email sender information
# EMAIL_FROM=Creator Hub <noreply@yourapp.com>

# =============================================================================
# CLOUD STORAGE CONFIGURATION (Optional)
# =============================================================================

# AWS S3 Configuration (if using S3 for file storage)
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# Cloudinary Configuration (alternative to S3)
# CLOUDINARY_CLOUD_NAME=your-cloud-name
# CLOUDINARY_API_KEY=your-api-key
# CLOUDINARY_API_SECRET=your-api-secret

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Log format (json, simple)
LOG_FORMAT=json

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# Rate limiting (requests per minute per IP)
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60000

# =============================================================================
# MONITORING & ANALYTICS (Optional)
# =============================================================================

# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics tracking ID
# GA_TRACKING_ID=UA-XXXXXXXXX-X

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================

# Enable debug mode (only for development)
# DEBUG=true

# Disable HTTPS redirect (only for development)
# DISABLE_HTTPS_REDIRECT=true

# =============================================================================
# PLATFORM-SPECIFIC CONFIGURATIONS
# =============================================================================

# Railway-specific
# RAILWAY_STATIC_URL=https://your-app.railway.app

# Render-specific
# RENDER_EXTERNAL_URL=https://your-app.onrender.com

# Heroku-specific
# HEROKU_APP_NAME=your-app-name

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit this file with real values to version control
# 2. Use environment-specific files (.env.development, .env.production)
# 3. Validate all environment variables on application startup
# 4. Use strong, unique secrets for JWT_SECRET
# 5. Regularly rotate secrets and API keys
# 6. Use HTTPS in production (most platforms handle this automatically)
# 7. Monitor your application logs for security issues
# 8. Set up proper backup strategies for your database
# 9. Use environment variable validation in your application
# 10. Document any custom environment variables your team adds